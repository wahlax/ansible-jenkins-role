---
# Install Jenkins from download
#
# Parameters:
#
# jdk_version: 11.0.12_7
# jdk_download_url: https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.12%2B7/OpenJDK11U-jdk_x64_linux_hotspot_11.0.12_7.tar.gz
# jdk_download_sha256: 8770f600fc3b89bf331213c7aa21f8eedd9ca5d96036d1cd48cb2748a3dbefd2
# jenkins_version: 2.303.2
# jenkins_download_url: https://get.jenkins.io/war-stable/2.303.2/jenkins.war
# jenkins_download_sha256: c4b8532e25a33001a3d8883d3cd87a664953ace239b486839b683065817d29cf

- name: Install prerequisite packages
  yum:
    state: present
    name:
      - curl
      - fontconfig

- name: Create jenkins group
  ansible.builtin.group:
    name: jenkins
    state: present

- name: Create jenkins user 
  ansible.builtin.user:
    name: jenkins
    group: jenkins
    state: present

- name: Create full jenkins directory structure (and init script dir)
  ansible.builtin.file:
    path: "{{jenkins_install_path}}/home/init.groovy.d"
    state: directory
    owner: jenkins
    group: jenkins
    mode: '750'
    recurse: true

- name: Download jenkins with checksum (sha256)
  ansible.builtin.get_url:
    url: "{{jenkins_download_url}}"
    dest: "{{jenkins_install_path}}/jenkins.war"
    checksum: sha256:{{jenkins_download_sha256}}

- name: Custom startup script for jenkins
  ansible.builtin.template:
    src: startup.shl.j2
    dest: "{{jenkins_install_path}}/startup.shl"
    owner: jenkins
    group: jenkins
    mode: '700'

- name: Setup jenkins as systemd
  ansible.builtin.template:
    src: jenkins.service.j2
    dest: /etc/systemd/system/jenkins.service

- name: Place script to reset password
  template:
    src: reset-password.groovy.j2
    dest: "{{jenkins_install_path}}/home/init.groovy.d/reset-password.groovy"
    owner: jenkins
    group: jenkins
    mode: '750'

- name: Start jenkins service
  ansible.builtin.systemd:
    name: jenkins.service
    state: started
    enabled: yes

- name: Get the jenkins-cli jarfile from the Jenkins server.
  get_url:
    url:  "{{ jenkins_local_url }}/jnlpJars/jenkins-cli.jar"
    dest: "{{ jenkins_install_path }}"
    validate_certs: "{{ jenkins_selfsigned_cert | ternary('no', 'yes') }}"
  become: yes
  become_user: jenkins 
  register: jarfile_get
  until: "'OK' in jarfile_get.msg or '304' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
  retries: 5
  delay: 10
  check_mode: false

- name: Delete reset-password.groovy from init directory.
  file:
    path: "{{jenkins_install_path}}/home/init.groovy.d/reset-password.groovy"
    state: absent

- name: Install the plugins
  ansible.builtin.shell: /usr/local/java/latest/bin/java -jar /usr/local/jenkins/jenkins-{{jenkins_version}}/jenkins-cli.jar {{ jenkins_selfsigned_cert | ternary('-noCertificateCheck','') }} -s {{jenkins_local_url}}/ install-plugin {{item}}:latest
  with_items: "{{ jenkins_plugin_names }}"
  become: yes
  become_user: jenkins 
  environment:
    JENKINS_USER_ID: "{{jenkins_admin_username}}"
    JENKINS_API_TOKEN: "{{jenkins_admin_password}}"

- name: Place script to create credentials
  template:
    src: create-credentials.groovy.j2
    dest: "{{jenkins_install_path}}/home/init.groovy.d/create-credentials.groovy"
    owner: jenkins
    group: jenkins
    mode: '750'

- name: Start jenkins service
  ansible.builtin.systemd:
    name: jenkins.service
    state: restarted

- name: Wait for Jenkins to start up before proceeding.
  uri:
    url: "{{ jenkins_local_url }}/cli/"
    method: GET
    return_content: "yes"
    timeout: 5
    body_format: raw
    follow_redirects: "no"
    status_code: 200,403
    validate_certs: "{{ jenkins_selfsigned_cert | ternary('no', 'yes') }}"
  register: result
  until: (result.status == 403 or result.status == 200) and (result.content.find("Please wait while") == -1)
  retries: 5
  delay: 10
  changed_when: false
  check_mode: false

- name: Delete groovy init directory.
  file:
    path: "{{jenkins_install_path}}/home/init.groovy.d"
    state: absent
